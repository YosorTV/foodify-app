{"version":3,"sources":["styles/index.js","assets/not-found.svg","components/NotFound.jsx","store/selectors/sideBar.js","store/selectors/dishes.js","store/types/sideBar.js","store/types/dishes.js","store/actions/sideBar.js","api/index.js","store/actions/dishes.js","models/Dish.js","components/AddDish.jsx","hooks/addDish.js","components/UI/Navigation/Navigation.jsx","components/UI/Navigation/Drawer.jsx","components/UI/ErrorNotification.jsx","assets/menu-item-placeholder.png","styles/animation.js","components/UI/Card.jsx","components/Layout.jsx","components/Dish.jsx","hooks/getRandomDish.js","hooks/setDishToFavourite.js","components/Favourite.jsx","hooks/deleteDish.js","views/RandomDish.jsx","views/FavouriteDishes.jsx","App.js","store/reducers/sideBar.js","store/reducers/dishes.js","store/init/rootReducer.js","store/init/middleware.js","store/init/store.js","index.js"],"names":["theme","createMuiTheme","palette","primary","main","green","secondary","type","Nav","styled","nav","Link","NavLink","Main","Section","section","DishCard","Card","FavCard","NotFound","src","NotFoundSVG","alt","Typography","component","to","variant","style","marginTop","sideBarSelector","state","sideBar","isOpened","dishesSelector","dishes","Object","freeze","SET_SIDEBAR","FETCH_DISHES","FETCH_DISHES_SUCCESS","FETCH_DISHES_ERROR","SET_DISH_TO_FAVOURITE","ADD_DISH","REMOVE_DISH","EDIT_DISH","sideBarAction","status","payload","api","axios","create","baseURL","dishesActions","getRandomDish","dispatch","a","get","data","response","statusText","setDish","removeDish","addDish","Dish","strMeal","strInstructions","idMeal","this","AddDish","callback","favourites","useSelector","useForm","mode","defaultValues","control","handleSubmit","reset","isDirty","useFormState","add","useDispatch","dish","useAddDish","useState","openDialog","setOpenDialog","handleClose","IconButton","onClick","marginLeft","Dialog","onClose","aria-labelledby","open","onSubmit","id","Math","ceil","random","myDish","localStorage","setItem","JSON","stringify","DialogTitle","DialogContent","dividers","Grid","container","alignItems","justify","spacing","item","xl","lg","md","sm","xs","name","defaultValue","render","field","onChange","value","error","fieldState","TextField","fullWidth","label","helperText","message","rules","required","multiline","DialogActions","Button","disabled","Navigation","breakpoints","useTheme","pathname","useLocation","isMedium","useMediaQuery","down","AddDishJSX","includes","margin","end","Drawer","navigate","useNavigate","sideBarList","text","icon","Home","Bookmark","listJSX","map","ListItem","button","ListItemIcon","ListItemText","Divider","aria-label","Menu","anchor","List","ErrorNotification","errorJSX","Snackbar","anchorOrigin","vertical","horizontal","fadeIn","hidden","opacity","show","transition","duration","exit","popUp","scale","MediaCard","onSkip","loading","onSave","CardImgJSX","Skeleton","animation","height","CardMedia","image","strMealThumb","placeholder","title","CardTitleJSX","width","gutterBottom","CardDescriptionJSX","color","CardTagJSX","strTags","Chip","CardYouTubeJSX","strYoutube","href","avatar","YouTube","target","clickable","AnimatePresence","motion","figure","variants","initial","animate","CardContent","className","CardActions","Cached","Favorite","Layout","CssBaseline","Container","disableGutters","maxWidth","AppBar","meals","randomDish","load","useFetchRandomDish","save","useSetDishToFavourite","useEffect","dishId","filter","Favourite","remove","useDelete","FavouirteDishesJSX","onRemove","Delete","length","RandomDish","FavouriteDishes","App","ThemeProvider","path","element","initialState","getItem","parse","rootReducer","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middleware","thunk","createLogger","collapsed","colors","action","prevState","nextState","store","createStore","applyMiddleware","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.651d585b.chunk.js","sourcesContent":["// Styles\r\nimport styled from 'styled-components';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\n// Colors\r\nimport { green } from '@material-ui/core/colors';\r\n// Components\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Card } from '@material-ui/core';\r\n\r\nexport const theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: green[500],\r\n    },\r\n    secondary: {\r\n      main: '#f44336',\r\n    },\r\n    type:'dark',\r\n  },\r\n});\r\n\r\nexport const Nav = styled.nav`\r\n  padding: 1rem 0.5rem;\r\n  height: 75px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport const Link = styled(NavLink)`\r\n  text-decoration: none;\r\n  color: #303030;\r\n  transition: all .1s linear;\r\n  &:nth-child(2){\r\n    margin-left: 1rem;\r\n  }\r\n  &.active{\r\n    color: #eeeeee;\r\n  }\r\n`\r\nexport const Main = styled.main`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height:100vh;\r\n`;\r\n\r\nexport const Section = styled.section`\r\n  display: flex;\r\n  margin-top: 5rem;\r\n  height: calc(100vh - 75px);\r\n`;\r\n\r\nexport const DishCard = styled(Card)`\r\n  max-width: 600px;\r\n  margin: 0 auto;\r\n  img{\r\n    height: 300px;\r\n    object-fit: cover;\r\n  }\r\n  figcaption{\r\n    .tags{\r\n      display: flex;\r\n      justify-content: space-between;\r\n      margin-bottom: .5rem;\r\n    }\r\n    p {\r\n      height: 124px;\r\n      padding: .5rem .5rem 0 0;\r\n      text-overflow: ellipsis;\r\n      overflow: auto;\r\n        &::-webkit-scrollbar {\r\n          width: .2rem;\r\n        }\r\n        &::-webkit-scrollbar-track {\r\n          box-shadow: inset 0 0 5px #424242;\r\n          border-radius: 20px;\r\n        }\r\n        &::-webkit-scrollbar-thumb {\r\n          background: #4caf50;\r\n        }\r\n      }\r\n    }\r\n  .actions{\r\n    justify-content: space-between;\r\n  }\r\n`;\r\n\r\nexport const FavCard = styled(DishCard)`\r\n  max-width: none;\r\n  margin: 1rem 1rem;\r\n`","export default __webpack_public_path__ + \"static/media/not-found.e4279006.svg\";","import React from 'react'\r\nimport { Typography } from '@material-ui/core';\r\nimport { Link } from '../styles'\r\nimport NotFoundSVG from '../assets/not-found.svg';\r\nexport const NotFound = () => {\r\n  return (\r\n    <>\r\n      <img src={ NotFoundSVG } alt=\"Not Found\"/>\r\n      <Typography component={Link} to=\"/\" variant=\"button\" style={{marginTop:\"2rem\"}}>\r\n        Return\r\n      </Typography>\r\n    </>\r\n  )\r\n}\r\n\r\n","export const sideBarSelector = (state) => {\r\n  return state.sideBar.isOpened\r\n}","export const dishesSelector = (state) => {\r\n  return state.dishes\r\n}","export const sideBar = Object.freeze({\r\n  SET_SIDEBAR: \"SET_SIDEBAR\"\r\n})","export const dishes = Object.freeze({\r\n  FETCH_DISHES: \"FETCH_DISHES\",\r\n  FETCH_DISHES_SUCCESS: \"FETCH_DISHES_SUCCESS\",\r\n  FETCH_DISHES_ERROR: \"FETCH_DISHES_ERROR\",\r\n  SET_DISH_TO_FAVOURITE:\"SET_DISH_TO_FAVOURITE\",\r\n  ADD_DISH:\"ADD_DISH\",\r\n  REMOVE_DISH:\"REMOVE_DISH\",\r\n  EDIT_DISH:\"EDIT_DISH\",\r\n})","import { sideBar } from \"../types\"\r\n\r\nexport const sideBarAction = (status) => {\r\n  return {\r\n    type:sideBar.SET_SIDEBAR,\r\n    payload: status\r\n  }\r\n}","import axios from 'axios';\r\n\r\nexport const api = axios.create({ baseURL:'https://www.themealdb.com/api/json/v1/1/random.php' });","// Types\r\nimport { dishes } from \"../types\"\r\n// Axios\r\nimport { api } from '../../api';\r\n\r\nexport const dishesActions = Object.freeze({\r\n  getRandomDish:() => async (dispatch) => {\r\n    try{\r\n      dispatch({ type: dishes.FETCH_DISHES });\r\n      const { data } = await api.get();\r\n      dispatch({ type:dishes.FETCH_DISHES_SUCCESS, payload:data })\r\n    } catch ({ response }) {\r\n        if(response.status === 404){ \r\n          dispatch({\r\n            type:dishes.FETCH_DISHES_ERROR, \r\n            payload: response.statusText || \"Oops something go wrong...\" \r\n          })\r\n        }\r\n    }\r\n  },\r\n  setDish:(data) => {\r\n    return {\r\n      type:dishes.SET_DISH_TO_FAVOURITE,\r\n      payload:data\r\n    }\r\n  },\r\n  removeDish:(data) => {\r\n    return {\r\n      type: dishes.REMOVE_DISH,\r\n      payload: data\r\n    }\r\n  },\r\n  addDish:(data) => {\r\n    return {\r\n      type: dishes.ADD_DISH,\r\n      payload:data\r\n    }\r\n  }\r\n})","export class Dish {\r\n  constructor(strMeal, strInstructions, idMeal){\r\n    this.strMeal = strMeal;\r\n    this.strInstructions = strInstructions;\r\n    this.idMeal = idMeal;\r\n  }\r\n}","// Core\r\nimport React, { useState } from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { Controller, useForm, useFormState } from 'react-hook-form'\r\n// MUI\r\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, Grid, IconButton, TextField } from '@material-ui/core'\r\nimport PostAddSharpIcon from '@material-ui/icons/PostAddSharp';\r\n//Models\r\nimport { Dish } from '../models';\r\n//Hooks\r\nimport { useAddDish } from '../hooks';\r\n//Selectors\r\nimport { dishesSelector } from '../store/selectors';\r\n\r\nexport const AddDish = () => {\r\n  const { favourites } = useSelector(dishesSelector);\r\n  const { strMeal, strInstructions } = new Dish('', '', null);\r\n  const { control, handleSubmit, reset } = useForm({\r\n    mode:\"onSubmit\",\r\n    defaultValues: { strMeal, strInstructions },\r\n  });\r\n  \r\n  const { isDirty } = useFormState({ control });\r\n  const { add } = useAddDish();\r\n\r\n  const submitForm = (callback) => handleSubmit(({strMeal, strInstructions}) => {\r\n    const id = Math.ceil(Math.random() * 10000);\r\n    const myDish = new Dish(strMeal, strInstructions, id);\r\n      add(myDish);\r\n      localStorage.setItem('favDishes', JSON.stringify([ myDish, ...favourites ]));\r\n    reset();\r\n    callback();\r\n  });\r\n\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n  const handleOpen = () => setOpenDialog(true);\r\n  const handleClose = () => setOpenDialog(false);\r\n\r\n  return (\r\n    <>\r\n      <IconButton onClick = {handleOpen} style={{ marginLeft:\"0.5rem\", marginTop:\"0.5rem\" }}> \r\n        <PostAddSharpIcon />\r\n      </IconButton>\r\n\r\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={openDialog}>\r\n        <form onSubmit = { submitForm(handleClose) }>\r\n          <DialogTitle id=\"dialog-title\">\r\n            Add your custom dish\r\n          </DialogTitle>\r\n            <DialogContent dividers>\r\n            <Grid container alignItems=\"center\" justify=\"center\" spacing={3}>\r\n              <Grid item xl={12} lg={12} md={12} sm={12} xs={12}>\r\n              <Controller\r\n                name=\"strMeal\"\r\n                control={control}\r\n                defaultValue={ strMeal }\r\n                render={({ field: { onChange, value }, fieldState: { error } }) => (\r\n                  <TextField\r\n                    fullWidth\r\n                    label=\"Title\"\r\n                    variant=\"outlined\"\r\n                    value={value}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                  />\r\n                )}\r\n                rules={{ required: 'Title required' }}\r\n              />\r\n              </Grid>\r\n              <Grid item xl={12} lg={12} md={12} sm={12} xs={12} >\r\n              <Controller\r\n                name=\"strInstructions\"\r\n                control={control}\r\n                defaultValue={ strInstructions }\r\n                render={({ field: { onChange, value }, fieldState: { error } }) => (\r\n                  <TextField\r\n                    label=\"Description\"\r\n                    fullWidth\r\n                    multiline\r\n                    variant=\"outlined\"\r\n                    value={value}\r\n                    onChange={onChange}\r\n                    error={!!error}\r\n                    helperText={error ? error.message : null}\r\n                  />\r\n                )}\r\n                rules={{ required: 'Description required' }}\r\n              />\r\n              </Grid>\r\n            </Grid>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button type=\"submit\" disabled={!isDirty}>\r\n                Add Dish\r\n              </Button>\r\n            </DialogActions>\r\n          </form>\r\n        </Dialog>\r\n      </>\r\n  )\r\n}\r\n\r\n\r\n","import { useDispatch } from 'react-redux';\r\nimport { dishesActions } from '../store/actions/dishes';\r\n\r\nexport const useAddDish = () => {\r\n  const { addDish } = dishesActions;\r\n  const dispatch = useDispatch();\r\n  const add = (dish) => dispatch(addDish(dish));\r\n\r\n  return { add }\r\n}","// Core\r\nimport React from 'react'\r\nimport { useLocation } from 'react-router-dom';\r\n// Styles\r\nimport { Nav, Link } from '../../../styles'\r\nimport { Typography, useMediaQuery, useTheme } from '@material-ui/core';\r\n// Components\r\nimport { Drawer } from '../Navigation';\r\nimport { AddDish } from '../../AddDish';\r\n\r\nexport const Navigation = () => {\r\n  const { breakpoints } = useTheme();\r\n  const { pathname } = useLocation();\r\n  const isMedium = useMediaQuery(breakpoints.down('md'));\r\n\r\n  const AddDishJSX = pathname.includes('favourites') ? <AddDish /> : null\r\n  return (\r\n    <Nav>\r\n    {!isMedium ?\r\n      <div style={{margin:'0 auto'}}>\r\n        <Typography \r\n          component={Link}\r\n          variant=\"button\"\r\n          to=\"/\" \r\n          end>\r\n          Random Dish\r\n        </Typography>\r\n        <Typography \r\n          component={Link} \r\n          variant=\"button\"\r\n          to=\"/favourites\">\r\n          Favourite Dishes\r\n        </Typography>\r\n      </div>\r\n      : <Drawer />\r\n    }\r\n    { AddDishJSX }\r\n    </Nav>\r\n  )\r\n}\r\n","// Core\r\nimport { Fragment } from 'react'\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { IconButton, Divider, List, ListItem, ListItemText, ListItemIcon, Drawer as DrawerUi } from \"@material-ui/core\";\r\nimport { Bookmark, Home, Menu } from \"@material-ui/icons\"\r\n// Actions\r\nimport { sideBarSelector } from '../../../store/selectors';\r\nimport { sideBarAction } from '../../../store/actions';\r\n\r\nexport const Drawer = () => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  const isOpened = useSelector(sideBarSelector);\r\n  const handleDrawer = () => dispatch(sideBarAction(true));\r\n\r\n  const sideBarList = [\r\n    {\r\n      text:\"Random Dish\",\r\n      icon: <Home />,\r\n      onClick: () => navigate('/')\r\n    },\r\n    {\r\n      text:\"Favourite Dishes\",\r\n      icon: <Bookmark />,\r\n      onClick: () => navigate('/favourites')\r\n    },\r\n  ]\r\n\r\n  const listJSX = sideBarList?.map(({ text, icon, onClick }) => {\r\n    return (\r\n      <Fragment key={text}>\r\n      <ListItem component=\"li\" button onClick={ onClick }>\r\n        <ListItemIcon>{icon}</ListItemIcon>\r\n        <ListItemText>{text}</ListItemText>\r\n      </ListItem>\r\n      <Divider/>\r\n      </Fragment>\r\n    )\r\n  })\r\n\r\n  return (\r\n    <>\r\n      <IconButton\r\n        aria-label=\"open drawer\"\r\n        onClick={handleDrawer}>\r\n        <Menu />\r\n      </IconButton>\r\n    <DrawerUi\r\n      variant=\"persistent\"\r\n      anchor=\"left\"\r\n      open={isOpened}>\r\n      <List>\r\n        { listJSX }\r\n      </List>\r\n    </DrawerUi>\r\n    </>\r\n  )\r\n}","import React from 'react'\r\nimport { Snackbar } from '@material-ui/core';\r\n\r\n\r\nexport const ErrorNotification = ({ error }) => {\r\n\r\n  const errorJSX = error && \r\n  <Snackbar\r\n    anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\r\n    open={!!error} \r\n    message={error}\r\n  />\r\n\r\n  return (\r\n    <>\r\n      { errorJSX }\r\n    </>\r\n  )\r\n}\r\n\r\n","export default __webpack_public_path__ + \"static/media/menu-item-placeholder.bd14d992.png\";","export const fadeIn = {\r\n  hidden:{\r\n    opacity:0\r\n  },\r\n  show:{\r\n    opacity:1,\r\n    transition:{\r\n      duration:.75,\r\n    },\r\n  exit:{\r\n    opacity:0,\r\n    transition:{\r\n      duration:.75\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport const popUp = {\r\n  hidden:{\r\n    opacity:0,\r\n    scale:.5\r\n  },\r\n  show:{\r\n    opacity:1,\r\n    scale:1,\r\n    transition:{\r\n      duration:.5,\r\n    },\r\n  exit:{\r\n    opacity:0,\r\n    transition:{\r\n      duration:.5\r\n      }\r\n    }\r\n  }\r\n}","// Core\r\nimport React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { motion, AnimatePresence } from 'framer-motion'\r\n//MUI\r\nimport { Skeleton } from '@material-ui/lab';\r\nimport { CardActions, CardContent, CardMedia, Typography, Chip, IconButton, Grid, Divider } from '@material-ui/core';\r\nimport { YouTube, Favorite, Cached } from '@material-ui/icons';\r\n// Styles\r\nimport { DishCard as Card } from '../../styles';\r\n// Other\r\nimport placeholder from '../../assets/menu-item-placeholder.png';\r\n// Selectors\r\nimport { dishesSelector } from '../../store/selectors';\r\nimport { popUp } from '../../styles/animation';\r\n\r\nexport const MediaCard = ({ data, onSkip, loading, onSave }) => {\r\n  const { favourites } = useSelector(dishesSelector);\r\n  //Card Image\r\n  const CardImgJSX = loading\r\n  ? <Skeleton animation=\"wave\" variant=\"rect\" height={300} /> \r\n  : <CardMedia\r\n      component={'img'}\r\n      image={data?.strMealThumb ? data?.strMealThumb : placeholder}\r\n      title=\"Contemplative Reptile\"\r\n    />;\r\n  // Card Title\r\n  const CardTitleJSX = loading \r\n  ? <Skeleton animation=\"wave\" variant=\"text\" height={20} width=\"40%\" /> \r\n  : <Typography gutterBottom variant=\"h5\" component=\"h2\"> { data?.strMeal } </Typography>;\r\n  // Card Description\r\n  const CardDescriptionJSX = loading \r\n  ? <Skeleton animation=\"wave\" variant=\"text\" height={155} width=\"100%\"  /> \r\n  : <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">{ data?.strInstructions }</Typography>;\r\n\r\n  const CardTagJSX = loading\r\n  ? <Skeleton animation=\"wave\" variant=\"text\" height={20} width=\"30%\"  /> \r\n  : data?.strTags && \r\n    <Chip\r\n      variant=\"default\"\r\n      label={data?.strTags}\r\n    />\r\n\r\n  const CardYouTubeJSX = loading\r\n  ? <Skeleton animation=\"wave\" variant=\"text\" height={20} width=\"20%\" /> \r\n  : data?.strYoutube && \r\n    <Chip\r\n      component={'a'}\r\n      label=\"watch\"\r\n      href={data?.strYoutube} \r\n      variant=\"outlined\"\r\n      avatar={<YouTube />}\r\n      target=\"_blank\"\r\n      clickable\r\n    />\r\n\r\n  return (\r\n    <Grid container justify=\"center\" alignItems=\"center\" component=\"section\">\r\n      <Grid item xs={10} sm={10} md={10} lg={10} xl={4} style={{ marginTop:\"5rem\"}}>\r\n      <AnimatePresence>\r\n        { !loading && \r\n          <Card component={motion.figure} variants={popUp} initial=\"hidden\" animate=\"show\">\r\n            { CardImgJSX }\r\n              <CardContent component={'figcaption'}>\r\n                { CardTitleJSX }\r\n                <div className=\"tags\">\r\n                  {CardTagJSX}\r\n                  {CardYouTubeJSX}\r\n                </div>\r\n                { CardDescriptionJSX }\r\n              </CardContent>\r\n            <Divider />\r\n            <CardActions className=\"actions\">\r\n              <IconButton color=\"primary\" onClick = { () => onSkip() }>\r\n                <Cached />\r\n              </IconButton>\r\n              <IconButton disabled={favourites.includes(data) ? true : false } color=\"secondary\" onClick = { () => onSave(data?.idMeal) }>\r\n                <Favorite />\r\n              </IconButton>\r\n            </CardActions>\r\n          </Card>\r\n        }\r\n      </AnimatePresence>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}","//Core\r\nimport React from 'react'\r\nimport { Outlet } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { CssBaseline, Container, AppBar } from \"@material-ui/core\";\r\nimport { sideBarSelector } from '../store/selectors';\r\nimport { sideBarAction } from '../store/actions';\r\nimport { Navigation } from './UI'\r\nimport { Main } from '../styles';\r\n\r\nexport const Layout = () => {\r\n  const dispatch = useDispatch();\r\n  const isOpened = useSelector(sideBarSelector);\r\n\r\n  const handleDrawer = () => isOpened && dispatch(sideBarAction(false));\r\n\r\n  return (\r\n    <>\r\n      <CssBaseline />\r\n      <Container disableGutters maxWidth=\"xl\" onClick = {handleDrawer}>\r\n        <AppBar color=\"primary\">\r\n          <Navigation />\r\n        </AppBar>\r\n        <Main>\r\n          <Outlet />\r\n        </Main>\r\n      </Container>\r\n    </>\r\n  )\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n// Core\r\nimport React from 'react'\r\nimport { useEffect } from 'react'\r\nimport { useSelector } from 'react-redux'\r\n//Components\r\nimport { ErrorNotification, MediaCard as Card } from './UI'\r\n// Hooks\r\nimport { useFetchRandomDish, useSetDishToFavourite } from '../hooks'\r\n//Selectors\r\nimport { dishesSelector } from '../store/selectors'\r\n\r\nexport const Dish = () => {\r\nconst { randomDish:{ meals }, loading, error, favourites } = useSelector(dishesSelector);\r\nconst { load } = useFetchRandomDish();\r\nconst { save } = useSetDishToFavourite();\r\nconst refetchData = () => load();\r\nconst saveDish = (dishId) => {\r\n  const dish = meals?.filter(({ idMeal }) => idMeal === dishId);\r\n    if (favourites.includes(...dish)) return\r\n      save(...dish);\r\n  };\r\n  localStorage.setItem('favDishes', JSON.stringify(favourites));\r\n  useEffect(() => load(), []); \r\n  return (\r\n    <>\r\n      <ErrorNotification error = { error } />\r\n      <Card data={meals?.[0]} onSkip={ refetchData } onSave={ saveDish } loading={ loading } />\r\n    </>\r\n  )\r\n};","import { useDispatch } from 'react-redux';\r\nimport { dishesActions } from '../store/actions/dishes';\r\n\r\nexport const useFetchRandomDish = () => {\r\n  const { getRandomDish } = dishesActions;\r\n  const dispatch = useDispatch();\r\n  const load = () => dispatch(getRandomDish());\r\n\r\n  return { load }\r\n}","import { useDispatch } from 'react-redux';\r\nimport { dishesActions } from '../store/actions/dishes';\r\n\r\nexport const useSetDishToFavourite = () => {\r\n  const { setDish } = dishesActions;\r\n  const dispatch = useDispatch();\r\n  const save = (dish) => dispatch(setDish(dish));\r\n\r\n  return { save }\r\n}","// Core\r\nimport React, { Fragment } from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { motion } from 'framer-motion'\r\n//MUI\r\nimport { CardActions, CardContent, CardMedia, Typography, Chip, IconButton, Grid, Divider } from '@material-ui/core';\r\nimport { YouTube, Delete } from '@material-ui/icons';\r\n//Selectors\r\nimport { dishesSelector } from '../store/selectors'\r\n// Hooks\r\nimport { useDelete } from '../hooks';\r\n// Styles\r\nimport { FavCard as Card, Section } from '../styles';\r\nimport placeholder from '../assets/menu-item-placeholder.png';\r\nimport { fadeIn } from '../styles/animation';\r\nexport const Favourite = () => {\r\n  const { favourites } = useSelector(dishesSelector);\r\n  const { remove } = useDelete();\r\n\r\n  const onRemove = (dish) => remove(dish);\r\n  \r\n  const FavouirteDishesJSX = favourites.map((dish) => {\r\n    return (\r\n      <Fragment key={dish.idMeal}>\r\n        <Grid item xl={4} lg={4} md={6} sm={12} xs={12}>\r\n          <Card component = {motion.figure} variants={fadeIn} initial=\"hidden\" animate=\"show\">\r\n            <CardMedia\r\n              component={'img'}\r\n              image={dish?.strMealThumb ? dish?.strMealThumb : placeholder}\r\n              title=\"Contemplative Reptile\"\r\n            />\r\n            <CardContent component={'figcaption'}>\r\n              <Typography \r\n                gutterBottom \r\n                variant=\"h5\" \r\n                component=\"h3\"> { dish?.strMeal }\r\n              </Typography>\r\n              <div className=\"tags\">\r\n                { dish?.strTags && \r\n                  <Chip \r\n                    variant=\"default\"\r\n                    label= { dish?.strTags } />\r\n                }\r\n                { dish?.strYoutube &&\r\n                  <Chip\r\n                    component={'a'} \r\n                    label=\"watch\" \r\n                    href={ dish?.strYoutube } \r\n                    variant=\"outlined\" \r\n                    avatar={<YouTube />} \r\n                    target=\"_blank\" \r\n                    clickable />\r\n                }\r\n              </div>\r\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">{ dish?.strInstructions }</Typography>\r\n            </CardContent>\r\n            <Divider />\r\n            <CardActions className=\"actions\">\r\n              <IconButton color=\"secondary\" onClick = { () => onRemove(dish) }>\r\n                <Delete />\r\n              </IconButton>\r\n            </CardActions>\r\n          </Card>\r\n        </Grid>\r\n      </Fragment>\r\n    )\r\n  })\r\n\r\n  return (\r\n    <Section>\r\n      <Grid container justify=\"flex-start\" alignItems=\"center\">\r\n      { favourites.length > 0 \r\n        ? FavouirteDishesJSX \r\n        : <Typography component=\"h2\" variant=\"h2\">No saved dishes at list</Typography>\r\n      }\r\n        \r\n      </Grid>\r\n    </Section>\r\n  )\r\n}\r\n","import { useDispatch } from 'react-redux';\r\nimport { dishesActions } from '../store/actions/dishes';\r\n\r\nexport const useDelete = () => {\r\n  const { removeDish } = dishesActions;\r\n  const dispatch = useDispatch();\r\n  const remove = (dish) => dispatch(removeDish(dish));\r\n\r\n  return { remove }\r\n}","import React from 'react'\r\nimport { Dish } from '../components'\r\n\r\nexport const RandomDish = () => {\r\n  return (\r\n    <>\r\n      <Dish/>\r\n    </>\r\n  )\r\n}\r\n\r\n","import React from 'react'\r\nimport { Favourite } from '../components'\r\n\r\nexport const FavouriteDishes = () => {\r\n  return (\r\n    <>\r\n      <Favourite />\r\n    </>\r\n  )\r\n}\r\n","//Core\nimport { Routes, Route } from 'react-router-dom';\nimport { ThemeProvider } from '@material-ui/core/styles';\n// Styles\nimport { theme } from './styles';\n// Pages\nimport { RandomDish, FavouriteDishes } from './views';\n//Components\nimport { NotFound, Layout } from './components';\n\nconst App = () => {\n  return (\n    <>\n    <ThemeProvider theme = {theme}>\n      <Routes>\n        <Layout>\n          <Route path=\"/\" element={<RandomDish />}/>\n          <Route path=\"/favourites\" element={<FavouriteDishes />}/>\n          <Route path=\"*\" element={<NotFound/>} />\n        </Layout>\n      </Routes>\n    </ThemeProvider>\n    </>\n  );\n}\n\nexport default App;\n","import { sideBar } from '../types';\r\n\r\nconst initialState = {\r\n  isOpened: false\r\n}\r\n\r\nexport const sideBarReducer = (state = initialState, { type, payload }) => {\r\n  switch(type){\r\n    case sideBar.SET_SIDEBAR:\r\n      return {\r\n        isOpened:payload\r\n      }\r\n    default:\r\n      return { ...state }\r\n  }\r\n}","import { dishes } from \"../types\"\r\n\r\nconst initialState = {\r\n  randomDish:[],\r\n  favourites:localStorage.getItem('favDishes') \r\n    ? JSON.parse(localStorage.getItem('favDishes')) \r\n    : [],\r\n  loading:false,\r\n  error:null\r\n}\r\n\r\nexport const dishesReducer = (state = initialState, {type, payload}) => {\r\n  switch(type) {\r\n    case dishes.FETCH_DISHES:{\r\n      return {\r\n        ...state,\r\n        randomDish:[],\r\n        loading:true\r\n      }\r\n    }\r\n    case dishes.FETCH_DISHES_SUCCESS:{\r\n      return {\r\n        ...state,\r\n        loading:false,\r\n        randomDish: {...payload}\r\n      }\r\n    }\r\n    case dishes.FETCH_DISHES_ERROR:{\r\n      return {\r\n        ...state,\r\n        loading:false,\r\n        error:payload\r\n      }\r\n    }\r\n    case dishes.SET_DISH_TO_FAVOURITE:{\r\n      return {\r\n        ...state,\r\n        favourites:[payload, ...state.favourites]\r\n      }\r\n    }\r\n    case dishes.REMOVE_DISH:{\r\n      const dishes = JSON.parse(localStorage.getItem('favDishes'));\r\n      const item = dishes.filter((item) => item.idMeal !== payload.idMeal);\r\n      localStorage.setItem('favDishes', JSON.stringify(item));\r\n      return {\r\n        ...state,\r\n        favourites:state.favourites.filter((item) => item.idMeal !== payload.idMeal)\r\n      }\r\n    }\r\n    case dishes.ADD_DISH:{\r\n      return {\r\n        ...state,\r\n        favourites:[payload, ...state.favourites]\r\n      }\r\n    }\r\n    default:{\r\n      return { ...state }\r\n    }\r\n  }\r\n}","// Core\r\nimport { combineReducers } from 'redux';\r\n\r\n// Reducers \r\nimport { \r\n  sideBarReducer as sideBar,\r\n  dishesReducer as dishes\r\n} from '../reducers';\r\n\r\nexport const rootReducer = combineReducers({ sideBar, dishes });","// Core\r\nimport { compose } from 'redux';\r\nimport { createLogger } from 'redux-logger';\r\nimport thunk from 'redux-thunk';\r\n// Devtools\r\nconst developmentEnvironment = process.env.NODE_ENV === 'development';\r\nconst devtools = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\r\nconst composeEnhancers = developmentEnvironment && devtools ? devtools : compose;\r\n\r\nconst middleware = [thunk];\r\n\r\nexport const logger = createLogger({\r\n  duration:  true,\r\n  collapsed: true,\r\n  colors:    {\r\n      title: (action) => {\r\n          return action.error ? 'firebrick' : 'deepskyblue';\r\n      },\r\n      prevState: () => '#1C5FAF',\r\n      action:    () => '#149945',\r\n      nextState: () => '#A47104',\r\n      error:     () => '#ff0005',\r\n  },\r\n});\r\n\r\nif (developmentEnvironment) {\r\n  middleware.push(logger);\r\n}\r\n\r\nexport { composeEnhancers, middleware };","// Core\r\nimport { createStore, applyMiddleware } from 'redux';\r\n\r\n// Instruments\r\nimport { rootReducer } from './rootReducer';\r\n\r\nimport { composeEnhancers, middleware } from './middleware';\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(applyMiddleware(...middleware)),\r\n);\r\n","//Core\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\n//Components\nimport App from './App';\n\n// Store\nimport { store } from './store/init/store';\n\nReactDOM.render(\n  <Provider store = {store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}